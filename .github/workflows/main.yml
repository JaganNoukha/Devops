name: Deploy Flask App to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install Flask dependencies (on GitHub Actions runner for build job)
      run: |
        python -m pip install --upgrade pip
        pip install Flask # This is for the build job, not directly for EC2 deployment

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout repository for deployment
      uses: actions/checkout@v4

    - name: Copy Flask app to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: ".,!venv/" # Ensure virtual environment from runner isn't copied
        target: "/var/www/flask_app" # Ensure this matches your systemd WorkingDirectory

    - name: Prepare and Restart Flask app on EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Navigate to the application directory
          cd /var/www/flask_app

          # Ensure necessary system packages are installed
          # python3-venv is crucial for creating virtual environments
          sudo apt update -y
          sudo apt install -y python3 python3-pip python3-venv

          # Create a Python virtual environment if it doesn't exist
          # '|| true' prevents the command from failing if 'venv' already exists
          python3 -m venv venv || true

          # Activate the virtual environment and install Flask/Gunicorn into it
          # This ensures packages are installed in an isolated environment
          source venv/bin/activate
          pip install Flask gunicorn

          # Stop the existing Flask app service (if running)
          echo "Attempting to stop flask-app service..."
          sudo systemctl stop flask-app || true

          # Reload systemd daemon to pick up any service file changes (if applicable)
          echo "Reloading systemd daemon..."
          sudo systemctl daemon-reload

          # Start the Flask app service
          echo "Attempting to start flask-app service..."
          sudo systemctl start flask-app
          echo "Deployment process on EC2 complete."
